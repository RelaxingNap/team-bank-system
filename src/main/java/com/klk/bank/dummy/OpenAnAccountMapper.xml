<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.klk.bank.mapper.OpenAnAccount">

	<!-- 상품 정보 -->
	<!-- <select id="selectProductAll" resultType="com.klk.bank.domain.ProductDto">
		SELECT p.id,
			   p.item_name,
			   p.summary,
			   p.sav_method,
			   p.rate,
			   p.exp_period,
			   p.date,
			   COUNT(DISTINCT r.id) numOfReply		
		FROM Product p LEFT JOIN Reply r ON p.id = r.product_id		
		WHERE 1 = 1		
		
		<if test="keyword != '%%'">
			AND p.item_name LIKE #{keyword }			
		</if>
		<if test="sav_method != ''">
			AND p.sav_method = #{sav_method}
		</if>
		<if test="exp_period != ''">
			AND p.exp_period = #{exp_period}
		</if>
		<if test="rate == 'rate1'">	
			<![CDATA[
				AND p.rate <= 0.02		
			]]>	
		</if>
		<if test="rate == 'rate2'">	
			<![CDATA[
				AND p.rate > 0.02				  		
			]]>	
		</if>		
			
		GROUP BY p.id
		ORDER BY p.id DESC
	</select> -->	
	
	<!-- <insert id="insertProduct" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO Product (item_name, summary, sav_method, exp_period, rate, detail)
		VALUES (#{item_name}, #{summary}, #{sav_method}, #{exp_period}, #{rate}, #{detail})
	</insert> -->
	
	<select id="selectProductById" resultType="com.klk.bank.domain.OpenAnAccountDto">
		SELECT p.id,
			   p.item_name,
			  <!--  p.summary, -->
			   p.sav_method,
			   p.rate,
			   p.exp_period,
			  <!--  p.detail, -->			  
			   p.date<!-- ,
			   COUNT(r.id) numOfReply -->
		FROM Product p <!-- LEFT JOIN Reply r ON p.id = r.product_id -->
		WHERE p.id = #{id}
	</select>

	<!-- <update id="updateProduct">
		UPDATE Product
		SET item_name = #{item_name},
			  summary = #{summary},
		   sav_method = #{sav_method},
		   exp_period = #{exp_period},
		   		 rate = #{rate},
			   detail = #{detail}
		WHERE id = #{id}
	</update> -->
	
	<!-- <delete id="deleteProduct">
		DELETE FROM Product
		WHERE id = #{id}
	</delete> -->

	<!-- 회원 정보 -->	
	<!-- <insert id="insertUser">
		INSERT INTO User(user_id, user_pw, user_name, user_address, user_phone, user_email, user_birth)
		VALUES (#{user_id}, #{user_pw}, #{user_name}, #{user_address}, #{user_phone}, #{user_email}, #{user_birth})
	</insert> -->
	
	<!-- 권한 추가 -->
	<!-- <insert id="insertAuth">
		INSERT INTO Auth(user_id, role)
		VALUES (#{user_id}, #{auth})
	</insert> -->
	
	<select id="countUserId" resultType="int">
		SELECT COUNT(user_id)
		FROM User
		WHERE user_id = #{user_id}
	</select>
	
	<!-- <select id="countUserEmail" resultType="int">
		SELECT COUNT(user_email)
		FROM User
		WHERE user_email = #{user_email}
	</select> -->
	
	<select id="selectUserById" resultType="com.klk.bank.domain.OpenAnAccountDto">
		SELECT user_id, user_pw, user_name<!-- , user_address, user_phone, user_email, user_birth -->  
		FROM User
		WHERE user_id = #{user_id}
	</select>
	
	<!-- <select id="selectAllUserList" resultType="com.klk.bank.domain.UserDto">
		SELECT u.user_id, u.user_pw, u.user_name, u.user_address, u.user_phone, u.user_email, u.user_birth, a.role user_role
		FROM User u JOIN Auth a 
		ON u.user_id = a.user_id
	</select> -->
	
	<!-- <update id="updateUser">
		UPDATE User
		SET user_pw = #{user_pw},
			user_address = #{user_address},
			user_phone = #{user_phone},
		    user_email = #{user_email}
		WHERE user_id = #{user_id}
	</update> -->
	
	<!-- <delete id="deleteUserById" >
		DELETE FROM User
		WHERE user_id = #{user_id}
	</delete> -->
	
	<!-- 권한 삭제 -->
	<!-- <delete id="deleteAuthById">
		DELETE FROM Auth
		WHERE user_id = #{user_id}
	</delete> -->
	<!-- 권한 변경 -->
	<!-- <update id="updateAuth">
		UPDATE Auth
		SET role = #{user_role}
		WHERE user_id = #{user_id}
	</update>	 -->

	<!-- 계좌 정보 -->
	<!-- <select id="selectAllAccount" resultType="com.klk.bank.domain.AccountDto">
		SELECT a.account_num,
			   a.account_user_id, 
			   a.account_item_id, 
			   a.account_pw, 
			   a.account_balance, 
			   a.account_date, 
			   u.user_name account_user_name 
		FROM Account a JOIN User u ON a.account_user_id = u.id
		<if test="type != null">
			<choose>
				<when test="type == 'account_num'">
					WHERE a.account_num LIKE #{keyword}
				</when>
				<when test="type == 'account_user_name'">
					WHERE u.user_name LIKE #{keyword}
				</when>
			</choose>
		</if>
		
		LIMIT #{from}, #{row_per_page}
	</select> -->
	
	<select id="selectAccount" resultType="com.klk.bank.domain.OpenAnAccountDto">
		SELECT a.account_num,
			   a.account_user_id, 
			   a.account_item_id, 
			   a.account_pw,<!--  
			   a.account_balance,  -->
			   a.account_date, 
			   u.user_name account_user_name 
		FROM Account a JOIN User u ON a.account_user_id = u.id
		WHERE account_num = #{account_num}
	</select>
	
	<insert id="insertAccount">
		INSERT INTO Account(account_num, account_user_id, account_item_id, account_pw)
		VALUES (#{account_num}, #{account_user_id}, #{account_item_id}, #{account_pw})
	</insert>
	
	<update id="updateAccount">
		UPDATE Account
		SET account_user_id = #{account_user_id},
		    account_item_id = #{account_item_id},
		    account_pw = #{account_pw}<!-- ,
		    account_balance = #{account_balance} -->
		WHERE account_num = #{account_num}    
	</update>
	
	<delete id="deleteAccount">
		DELETE FROM Account
		WHERE account_num = #{account_num}
	</delete>
	
	<!-- <select id="selectSearchCountAccount" resultType = "int">
		SELECT COUNT(*)
		FROM Account a JOIN User u ON a.account_user_id = u.id
		<if test="type != null">
			<choose>
				<when test="type == 'account_num'">
					WHERE a.account_num LIKE #{keyword}
				</when>
				<when test="type == 'account_user_name'">
					WHERE u.user_name LIKE #{keyword}
				</when>
			</choose>
		</if>		
	</select> -->
	
	<select id="countAccountNum" resultType="int">
		SELECT COUNT(account_num)
		FROM Account
		WHERE account_num = #{account_num}
	</select>

</mapper>